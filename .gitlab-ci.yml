# .gitlab-ci.yml
stages:
  - build
  - deploy

variables:
  GIT_SUBMODULE_STRATEGY: recursive

# -------------------------------------------------
# 1. Build: instala dependências e gera vendor/ como artefato
# -------------------------------------------------
build:
  stage: build
  image: php:7.4
  before_script:
    - apt-get update -y && apt-get install -y unzip git libzip-dev
    - docker-php-ext-install pdo_mysql zip
  script:
    - composer install --no-dev --optimize-autoloader
  artifacts:
    paths:
      - vendor/

# -------------------------------------------------
# 2. Deploy: via SSH na branch principal
# -------------------------------------------------
deploy_production:
  stage: deploy
  image: alpine:latest
  before_script:
    # instala cliente SSH e adiciona a chave
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - ssh-keyscan -H "$DEPLOY_HOST" >> ~/.ssh/known_hosts
  script:
    # puxa novo código, instala, roda migrations e limpa cache
    - ssh $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
        cd /var/www/html/v2
        git pull origin $CI_COMMIT_REF_NAME
        composer install --no-dev --optimize-autoloader
        php artisan migrate --force
        php artisan config:cache
        php artisan route:clear
        php artisan view:clear
        sudo systemctl reload php7.4-fpm
        sudo systemctl reload nginx
      EOF
  only:
    - main
  when: on_success
